local Finity = loadstring(game:HttpGet("https://raw.githubusercontent.com/YouCantCMe/Libraries/main/FinityUI"))()
local ESP = loadstring(game:HttpGet("https://raw.githubusercontent.com/YouCantCMe/Libraries/main/ESP"))()

local FinityWindow = Finity.new(true,"Military Tycoon - Use right ctrl to toggle",true)
FinityWindow.ChangeToggleKey(Enum.KeyCode.RightControl)

local Main = FinityWindow:Category("Main")

--
shared.WalkSpeed = 16
shared.JumpPower = 50

shared.KillAura = false
shared.SilentAim = false
shared.Wallcheck = false
shared.ShowRay = false
shared.AutoTycoon = false
shared.TargetGuards = false

--

local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()
local camera = game:GetService("Workspace").CurrentCamera

local oilRigPositions = {
    Vector3.new(1639.2574462891, 49.330989837646, 1678.7113037109),
    Vector3.new(-1678.4606933594, 49.330989837646, 1640.2817382812),
    Vector3.new(-1639.5363769531, 49.379989624023, -1678.2138671875),
    Vector3.new(1680.0460205078, 49.330989837646, -1639.578125)
}
print(oilRigPositions[1])
function notBehindWall(target)
    local ray = Ray.new(plr.Character.Head.Position, (target.Position - plr.Character.Head.Position).Unit * 5000)
    local part, position = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, {plr.Character}, false, true)
    if part then
        local humanoid = part.Parent:FindFirstChildOfClass("Humanoid")
        if not humanoid then
            humanoid = part.Parent.Parent:FindFirstChildOfClass("Humanoid")
        end
        if humanoid and target and humanoid.Parent == target.Parent then
            local pos, visible = camera:WorldToScreenPoint(target.Position)
            if visible then
                return true
            end
        end
    end
end

function getPlayerClosestToMouse()
    local target = nil
    local maxDist = 100
    for _,v in pairs(plrs:GetPlayers()) do
        if v.Character then
            if v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("HumanoidRootPart") and v.TeamColor ~= plr.TeamColor and not v.Character:FindFirstChildOfClass("ForceField") then
                local pos, vis = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                local dist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(pos.X, pos.Y)).Magnitude
                if dist < maxDist and vis then
                    if shared.Wallcheck == true then
                        if notBehindWall(v.Character.Head) then
                            target = v.Character
                        end
                    else
                        target = v.Character
                    end
                    maxDist = dist
                end
            end
        end
    end
    return target
end


local gmt = getrawmetatable(game)
setreadonly(gmt,false)
local oldNamecall = gmt.__namecall
gmt.__namecall = newcclosure(function(self,...)
    local method = getnamecallmethod()
    local args = {...}

    if method == "FireServer" and tostring(self) == "ShootEvent"  then
        if shared.SilentAim == true or shared.KillAura == true then
            local target = nil
            if shared.KillAura then
                local closestPlayer,dist = nil,9999999999
                for i, v in pairs(game.Players:GetPlayers()) do
                    if v.Character then
                        if v.Character.PrimaryPart and v.Character:FindFirstChildOfClass("Humanoid") and v ~= plr then
                            if v.Character:FindFirstChildOfClass("Humanoid").Health > 0 and not v.Character:FindFirstChildOfClass("ForceField") then
                                local distAway = (plr.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude
                                if distAway < dist then
                                    dist = distAway
                                    closestPlayer = v
                                end
                            end
                        end
                    end
                end
                target = closestPlayer.Character
            else
                target = getPlayerClosestToMouse()
            end
           -- shared.SilentAim = true
            --shared.Wallcheck = false
           -- shared.ShowRay = true
           if not target and shared.TargetGuards then
                local closestPlayer,dist = nil,9999999999
                local function search(f)
                    for i, v in pairs(f:GetDescendants()) do
                        if v:IsA("Model") then
                            if v.Name == "Guard" then
                                if v:FindFirstChildOfClass("Humanoid") then
                                    if v:FindFirstChildOfClass("Humanoid").Health > 0 and not v:FindFirstChildOfClass("ForceField") then
                                        local distAway = (v.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude
                                        if distAway < dist then
                                            dist = distAway
                                            closestPlayer = v
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                search(workspace.Tycoons)
                search(workspace.ControlPoints)

                target = closestPlayer
           end
            if target then
                local raycastParams = RaycastParams.new()
                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                raycastParams.FilterDescendantsInstances = {target.Head} --can only hit the player head
                raycastParams.IgnoreWater = true
                
                -- Cast the ray
                local part = plr.Character:FindFirstChildOfClass("Tool").ToolModel.ShootPart --shoot part
                local origin = part.Position --shoot part pos
                local direction = (target.Head.Position - part.CFrame.p).unit * 5000 --toward at the head of the player
                local raycastResult = workspace:Raycast(origin, direction, raycastParams)
                if raycastResult then
                    args[1] = {raycastResult.Position} 
                    args[2] = {origin}
                    args[3] = {raycastResult.Instance}
                    args[4] = {raycastResult.Position}
                    args[5] = {raycastResult.Normal}
                    if shared.ShowRay == true then
                        local dist = (origin - raycastResult.Position).Magnitude
                        local part = Instance.new("Part")
                        part.Anchored = true
                        part.CanCollide = false
                        part.Color = Color3.fromRGB(255,255,255)
                        part.Size = Vector3.new(0.1, 0.1, dist)
                        part.CFrame = CFrame.new(origin, raycastResult.Position)*CFrame.new(0, 0, -(dist/2))
                        part.Transparency = 0.5
                        part.Material = Enum.Material.Neon
                        part.Parent = workspace
                        coroutine.wrap(function()
                            wait(1)
                            part:Destroy()
                        end)()
                    end
                end
            end
        end
        return self.FireServer(self, unpack(args))
    elseif method == "FireServer" and tostring(self) == "CC"  then
        return nil
  --  elseif method == "FireServer" and tostring(self) == "Died" and not checkcaller() then
  --      return nil
    end
    return oldNamecall(self,...)
end)

-- ui
function sendMessage(title,msg,dur)
    game.StarterGui:SetCore("SendNotification", {
        Title = title; 
        Text = msg;
        Duration = not dur and 4 or dur; 
    })
end

function changeHumanoidValue(values,value)
    if plr.Character then
        if plr.Character.PrimaryPart then
            for i, v in pairs(values) do
               plr.Character.Humanoid[i] = v
            end
        end
    end
end

function getPlayersTycoon(plr_)
    return tostring(plr_.Team),game:GetService("Workspace").Tycoons:FindFirstChild(tostring(plr_.Team))
end

local moving = false

function float()
    local char = plr.Character
    if char and char.PrimaryPart then
        local root = char.HumanoidRootPart
        char.Humanoid.PlatformStand = true 
        if not root:FindFirstChild("BodyGyro") then
            local bg = Instance.new("BodyGyro")
            bg.MaxTorque = Vector3.new(9e+09,9e+09,9e+09)
            bg.P = 90000
            bg.Parent = root
        end
        if not root:FindFirstChild("BodyVelocity") then
            local bv = Instance.new("BodyVelocity")
            bv.MaxForce = Vector3.new(9e+09,9e+09,9e+09)
            bv.P = 1250
            bv.Velocity = Vector3.new(0,0,0)
            bv.Parent = root
        end
    end
end

function unfloat()
    local char = plr.Character
    if char and char.PrimaryPart then
        char.Humanoid.PlatformStand = false 
        local root = char.HumanoidRootPart
        if root:FindFirstChild("BodyGyro") then
            root:FindFirstChild("BodyGyro"):Destroy()
            root:FindFirstChild("BodyVelocity"):Destroy()
        end
    end
end

function goTo(cf,ret)
    local ts = game:GetService("TweenService")
    local uis = game:GetService("UserInputService")
    local char = plr.Character
    if char and char.PrimaryPart and not moving and cf ~= nil then
        moving = true
        float()
        local part = char.HumanoidRootPart
        local time = (char.PrimaryPart.Position-cf.p).Magnitude/375+(char.PrimaryPart.Position-cf.p).Magnitude/400
        local ti = TweenInfo.new(time, Enum.EasingStyle.Linear)
        local tp = {CFrame = cf}
        local t = ts:Create(part, ti, tp)
        t:Play()
        t.Completed:Connect(function()
            moving =false
            unfloat()
            t:Destroy()
            if ret then
                return true
            end
        end)
    end
end

function Action(Object, Function) if Object ~= nil then Function(Object); end end

game:GetService("UserInputService").InputBegan:Connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        if plr.Character and plr.Character.PrimaryPart then
            if shared.NoClip == false and shared.InfiniteJumps == true then
                Action(plr.Character.Humanoid, function(self)
                    if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                        Action(plr.Character.HumanoidRootPart, function(self)
                            self.Velocity = Vector3.new(self.Velocity.X, shared.JumpPower, self.Velocity.Z);
                        end)
                    end
                end)
            end
        end
    end
end)

--game:GetService("Workspace").Tycoons.Germany.Essentials.Giver.CollectButton
function removePurchaseJunk(a)
    if a.Name == "PurchasePrompt" then
        if shared.AutoTycoon == true then
            game:GetService("Debris"):AddItem(a,0)
        end
    end
end
for i, v in pairs(game:GetService("CoreGui"):GetDescendants()) do
    removePurchaseJunk(v)
end
game:GetService("CoreGui").DescendantAdded:Connect(removePurchaseJunk)

local del = tick()
local ti = 0
spawn(function()
    while wait(.1) do
        if plr.Character and plr.Character.PrimaryPart and plr.Character:FindFirstChild("Humanoid") then
            if plr.Character:FindFirstChild("Humanoid").Health >= 0 then
                if plr.Character:FindFirstChild("Drown") then
                    plr.Character:FindFirstChild("Drown"):Destroy()
                end
                local tycoonName,tycoon = getPlayersTycoon(plr)
                if shared.KillAura then
                    local closestPlayer,dist = nil,9999999999
                    for i, v in pairs(game.Players:GetPlayers()) do
                        if v.Character then
                            if v.Character.PrimaryPart and v.Character:FindFirstChildOfClass("Humanoid") and v ~= plr then
                                if v.Character:FindFirstChildOfClass("Humanoid").Health > 0 and not v.Character:FindFirstChildOfClass("ForceField") then
                                    local distAway = (plr.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude
                                    if distAway < dist then
                                        dist = distAway
                                        closestPlayer = v
                                    end
                                end
                            end
                        end
                    end
                    local gun = plr.Backpack:FindFirstChildOfClass("Tool") or plr.Character:FindFirstChildOfClass("Tool")
                    local foundGun = false
                    if gun then
                        if gun:FindFirstChild("Ammo") then
                            foundGun = true
                        end
                    end
                    if not foundGun then
                        local best,w = 0
                        for i = 1, 100 do
                            local weapon = tycoon.Purchases:FindFirstChild("Weapon"..i)
                            if weapon then
                                if i > best then
                                    best = i
                                    w = weapon
                                end
                            end
                        end
                        if best > 0 then
                            goTo(w.Giver.CFrame)
                            fireproximityprompt(w.Giver.Attachment.WeaponPrompt)
                            coroutine.wrap(function()
                                for i = 1, 15 do
                                    fireproximityprompt(w.Giver.Attachment.WeaponPrompt)
                                    wait()
                                end
                            end)()
                        end
                    end
                    if closestPlayer and dist < shared.KillAuraRadius then
                        if foundGun then
                            if plr.Character:FindFirstChildOfClass("Tool") then
                                local counter = plr.PlayerGui:FindFirstChild("AmmoCounter") 
                                if counter then
                                    if counter.Meter.Text ~= "Reloading..." then
                                        if string.sub(counter.Meter.Text, 1, 1)=="0" then
                                            game:GetService("ReplicatedStorage").Events.ReloadEvent:FireServer()
                                        else
                                            local args = {
                                                [1] = {
                                                    [1] = nil --[[Vector3]]
                                                },
                                                [2] = {
                                                    [1] = nil --[[Vector3]]
                                                },
                                                [3] = {
                                                    [1] = plr.Character.HumanoidRootPart
                                                },
                                                [4] = {
                                                    [1] = nil --[[Vector3]]
                                                },
                                                [5] = {
                                                    [1] = nil --[[Vector3]]
                                                }
                                            }
                                            
                                            game:GetService("ReplicatedStorage").Events.ShootEvent:FireServer(unpack(args))
                                        end
                                    end
                                end
                            else
                                plr.Character.Humanoid:EquipTool(gun)
                            end
                        end
                    end
                end
                if shared.AutoTycoon == true then
                    changeHumanoidValue({WalkSpeed = 18,JumpPower = 50})
                else
                    changeHumanoidValue({WalkSpeed = shared.WalkSpeed,JumpPower = shared.JumpPower})
                end
    --autofarm
                if shared.AutoTycoon == true and not moving and tick() - del > 0.75 and tycoon and tycoonName then


                    del = tick()
                    tycoon:WaitForChild("Buttons")
                    tycoon:WaitForChild("Purchases")
                    if tycoonName and tycoon then
                        local foundButtonToBuy,Button = false,nil
                        for i, v in pairs(tycoon:WaitForChild("Buttons"):GetChildren()) do
                            if v:FindFirstChild("Button") then
                                if v.Button.Color == Color3.fromRGB(0,255,0) and v.Button.Transparency == 0 then
                                    if not tycoon.Purchases:FindFirstChild(v.Name) then
                                        foundButtonToBuy = true
                                        Button = v.Button
                                    end
                                end
                            end
                        end
                        if foundButtonToBuy then
                            goTo(Button.CFrame+Vector3.new(0,2.5,0))
                        else
                            --print((plr.Character.HumanoidRootPart.Position - tycoon.Essentials.Giver.CollectButton.Position).Magnitude)
                            local rb = false
                            if tycoon:WaitForChild("Essentials"):WaitForChild("RebirthStation"):FindFirstChild("Button") then 
                                if tycoon.Essentials.RebirthStation.Button:FindFirstChild("ParticleEmitter") then
                                    local thing = tycoon.Essentials.RebirthStation.Button
                                    if thing.ParticleEmitter.Enabled == true then
                                        rb = true
                                        goTo(thing.CFrame+Vector3.new(1.5,1,0))
                                        fireproximityprompt(thing.RebirthPrompt)
                                    end
                                end
                            end
                            if not rb then
                                if (plr.Character.HumanoidRootPart.Position - tycoon:WaitForChild("Essentials"):WaitForChild("Giver"):WaitForChild("CollectButton").Position).Magnitude > 4.5 then
                                    goTo(tycoon.Essentials.Giver.CollectButton.CFrame+Vector3.new(0,2.5,0))
                                end
                                if math.random(1, 25) == 25 then
                                    plr.Character.Humanoid.Jump = true
                                    goTo(tycoon.Essentials.Giver.CollectButton.CFrame+Vector3.new(0,2.5,0))
                                end
                            end
                        end
                    end
                -- goTo(tycoon.Essentials.SpawnLocation.CFrame+Vector3.new(0,3,0))
                end
                if shared.CaptureRigs == true then
                    local options = {
                        "Rig 1",
                        "Rig 2",
                        "Rig 3",
                        "Rig 4",
                    }
                    for Option, v in pairs(options) do
                        if workspace.ControlPoints:FindFirstChild(Option).Flag:FindFirstChild("FlagPart") then
                            workspace.ControlPoints:FindFirstChild(Option).Flag.FlagPart.CanCollide = false
                            goTo(workspace.ControlPoints:FindFirstChild(Option).Flag.FlagPart.CFrame+Vector3.new(0,3,0))
                        end
                    end
                end
            end
        end
    end
end)

local RunService = game:GetService("RunService")
local CharacterSetting = Main:Sector("Character Settings")

CharacterSetting:Cheat("Slider", "WalkSpeed", function(Value)
	shared.WalkSpeed = Value
end, {min = 16, max = 200,default = 16})
shared.WalkSpeed = 16

CharacterSetting:Cheat("Slider", "JumpPower", function(Value)
	shared.JumpPower = Value
end, {min = 50, max = 200,default = 50})
shared.JumpPower = 50

CharacterSetting:Cheat("Checkbox", "Infinite Jumps", function(State)
    shared.InfiniteJumps = State
end)
local AimbotSetting = Main:Sector("Aimbot Settings")

AimbotSetting:Cheat("Checkbox", "Kill Aura", function(State)
    shared.KillAura = State
end)

shared.KillAuraRadius = 250
AimbotSetting:Cheat("Slider", "Kill Aura Radius", function(Value)
	shared.KillAuraRadius = Value
end, {min = 100, max = 1000,default = 250})

AimbotSetting:Cheat("Checkbox", "Silent Aim", function(State)
    shared.SilentAim = State
end)

AimbotSetting:Cheat("Checkbox", "Wall Check", function(State)
    shared.Wallcheck = State
end)

--AimbotSetting:Cheat("Checkbox", "Target Guards", function(State)
    --shared.TargetGuards = State
--end)

AimbotSetting:Cheat("Checkbox", "Vizualize Ray", function(State)
    shared.ShowRay = State
end)

-- esp


local ESPSetting = Main:Sector("ESP Settings")

ESP.Tracers = true
ESP.Names = true
ESP.Boxes = true
ESP.TeamColor = false

ESPSetting:Cheat("Checkbox", "ESP Enabled", function(State)
    ESP:Toggle(State)
end)

ESPSetting:Cheat("Checkbox", "Tracers", function(State)
    ESP.Tracers = State
end,{enabled = true})

ESPSetting:Cheat("Checkbox", "Name", function(State)
    ESP.Names = State
end,{enabled = true})

ESPSetting:Cheat("Checkbox", "Boxes", function(State)
    ESP.Boxes = State
end,{enabled = true})


ESPSetting:Cheat("Checkbox", "TeamColor", function(State)
    ESP.TeamColor = State
end)



local TycoonSettings = Main:Sector("Tycoon")

TycoonSettings:Cheat("Checkbox", "Auto Complete Tycoon", function(State)
    sendMessage("Info","I suggest using this with kill aura",4)
    local tycoonName,tycoon = getPlayersTycoon(plr)
    if tycoonName and tycoon then
        shared.AutoTycoon = State
    end
   -- goTo(tycoon.Essentials.SpawnLocation.CFrame+Vector3.new(0,3,0))
end,{enabled = false})

--TycoonSettings:Cheat("Checkbox", "Auto Capture Oil Rigs", function(State)
   -- sendMessage("Info","I suggest using this with kill aura",4)
   -- shared.CaptureRigs = true
    --goTo(tycoon.Essentials.SpawnLocation.CFrame+Vector3.new(0,3,0))
--end,{enabled = false})

TycoonSettings:Cheat("Button", "Goto Tycoon", function()
    local tycoonName,tycoon = getPlayersTycoon(plr)
    goTo(tycoon.Essentials.SpawnLocation.CFrame+Vector3.new(0,3,0))
end)

TycoonSettings:Cheat("Label", "Your tycoon spawner locations")

TycoonSettings:Cheat("Button", "Goto Plane Spawn", function()
    local tycoonName,tycoon = getPlayersTycoon(plr)
    goTo(tycoon.Essentials.PlaneSpawn.CFrame+Vector3.new(0,3,0))
end)

TycoonSettings:Cheat("Button", "Goto Land Spawn", function()
    local tycoonName,tycoon = getPlayersTycoon(plr)
    goTo(tycoon.Essentials.LandSpawn.CFrame+Vector3.new(0,3,0))
end)

TycoonSettings:Cheat("Button", "Goto Water Spawn", function()
    local tycoonName,tycoon = getPlayersTycoon(plr)
    goTo(tycoon.Essentials.WaterSpawn.CFrame+Vector3.new(0,3,0))
end)

TycoonSettings:Cheat("Button", "Goto Air Spawn", function()
    local tycoonName,tycoon = getPlayersTycoon(plr)
    goTo(tycoon.Essentials.AirSpawn.CFrame+Vector3.new(0,3,0))
end)
TycoonSettings:Cheat("Label", "Control points")
for i = 1, 4 do
    local oilRig = workspace.ControlPoints:FindFirstChild("Oil Rig")
    oilRig.Name = "Rig "..i
end
TycoonSettings:Cheat("Dropdown", "Goto Oil Rig", function(Option)
    goTo(CFrame.new(oilRigPositions[tonumber(Option)]))
end, {
	options = {
		"1",
		"2",
        "3",
        "4"
	}
})
for i = 1, 4 do
    local Fortress = workspace.ControlPoints:FindFirstChild("Fortress")
    Fortress.Name = "Fortress "..i
end
TycoonSettings:Cheat("Dropdown", "Goto Fortress", function(Option)
    if workspace.ControlPoints:FindFirstChild(Option).Flag:FindFirstChild("FlagPart") then
        workspace.ControlPoints:FindFirstChild(Option).Flag.FlagPart.CanCollide = false
        goTo(workspace.ControlPoints:FindFirstChild(Option).Flag.FlagPart.CFrame+Vector3.new(0,3,0))
    else
        sendMessage("Info","This fortress isn't loaded in",4)
    end
end, {
	options = {
		"Fortress 1",
		"Fortress 2",
        "Fortress 3",
        "Fortress 4"
	}
})

local MiscSetting = Main:Sector("Misc")

local codeDB = true
TycoonSettings:Cheat("Button", "Redeem All Codes", function()
    if codeDB == false then
        return
    end
    codeDB = false
    for code, v in pairs(require(workspace.MainModule)) do
        local args = {
            [1] = code;
        }
        game:GetService("ReplicatedStorage").Events.Codes:FireServer(unpack(args))
        sendMessage("Redeemed","Redeemed code: "..code,4)
        wait(.1)
    end
end)

TycoonSettings:Cheat("Button", "Collect Crate", function()
    local crates ={}
    for i, v in pairs(workspace:GetChildren()) do
        if v.Name == "Crate" and v:IsA("Model") and v:FindFirstChild("Hitbox") then
            table.insert(crates,v)
        end
    end
    if #crates == 0 then
        sendMessage("No Crates","No crates have spawned in yet..",6)
    else
        sendMessage("Collecting Crate","Found "..#crates.." crate(s) in the map.",6)
        goTo(crates[1].Box.CFrame+Vector3.new(0,3,0),true)
    end
end)
MiscSetting:Cheat("Button", "Remove Owner Doors", function(State)
    for i, v in pairs(workspace:GetDescendants()) do 
        if v:IsA("BasePart") then
            if v.Color == Color3.fromRGB(255, 89, 89) then
                v:Destroy()
            end
        end
    end
end)

MiscSetting:Cheat("Button", "Load Infinite Yield", function(State)
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)

MiscSetting:Cheat("Label", "Script created by YouCantSeeMe#3434")

local VirtualUser = game:GetService('VirtualUser')
plr.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local old
old = hookmetamethod(
    game,
    "__namecall",
    function(self, ...)
        local method = tostring(getnamecallmethod())
        if string.lower(method) == "kick" then
            return wait(9e9)
        end
        return old(self, ...)
    end
)
